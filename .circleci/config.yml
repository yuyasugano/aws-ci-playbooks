# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
machine:
  environment:
    AWS_DEFAULT_REGION: ap-northeast-1
    TERRAFORM_VER: 0.12.6

dependencies:
  cache_directories:
    - ~/.local/bin

  override:
    - |
      if [[ ! -f ~/.local/bin/terraform ]]; then
        mkdir -p ~/.local/bin
        cd ~/.local/bin
        curl -LO https://releases.hashicorp.com/terraform/${TERRAFORM_VER}/terraform_${TERRAFORM_VER}_linux_amd64.zip
        unzip -o terraform_${TERRAFORM_VER}_linux_amd64.zip
      fi
    - sudo cp -fR ~/.local/bin/* /usr/local/bin

jobs:
  build:
    docker:
      - image: circleci/python:3.6.2
    environment:
      AWS_DEFAULT_REGION: ap-northeast-1
      TERRAFORM_VER: 0.12.6
    parallelism: 1
    working_directory: ~/main
    steps:
      - checkout
      - run:
          name: install terraform
          command: |
            if [[ ! -f ~/.local/bin/terraform ]]; then
              mkdir -p ~/.local/bin
              cd ~/.local/bin
              curl -LO https://releases.hashicorp.com/terraform/${TERRAFORM_VER}/terraform_${TERRAFORM_VER}_linux_amd64.zip
              unzip -o terraform_${TERRAFORM_VER}_linux_amd64.zip
            fi
      - run:
          name: move a binary
          command: sudo cp -fR ~/.local/bin/* /usr/local/bin
      - run:
          name: plan a terraform
          command: terraform plan
  deploy:
    docker:
      - image: circleci/python:3.6.2
    working_directory: ~/main
    steps:
      - checkout
      - run:
          name: apply a terraform
          command: 'terraform apply'

# Use a package of configuration called an orb.
# orbs:
  # Declare a dependency on the welcome-orb
  # welcome: circleci/welcome-orb@0.4.1
    
# Orchestrate or schedule a set of jobs
workflows:
  version: 2
  # Name the workflow "welcome"
  # welcome:
    # Run the welcome/run job in its own container
    # jobs:
    #   - welcome/run
  workflows:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
